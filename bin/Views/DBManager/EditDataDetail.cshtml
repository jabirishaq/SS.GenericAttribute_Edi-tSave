@model SmartStore.Admin.DBManager.Models.TableManager


@{
    Layout = "~/Administration/Views/Shared/Layouts/_AdminLayout.cshtml";
    ViewBag.Title = T("Admin.ContentManagement.DBManager.Title");

    ViewBag.Title = "EditRow";
    string tableName = TempData["TableName"].ToString();
    int recordNum = 0;
    string Id = "";
}

<style>
    .form-control {
        width: 150px !important;
    }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<div class="section-header">
    <div class="title">
        <i class="fa fa-database"></i>
        Edit Table Data
        <a href='@Url.Action("List", "DBManager")'>(Back To List)</a>
    </div>
    <div class="options">
        <div class="options">
            <button type="button" name="save" value="save" onclick="GetTextBoxValueOne(true)" class="btn btn-warning">
                <i class="fa fa-check"></i>
                <span>@T("Admin.Common.Save")</span>
            </button>

            <button type="button" name="save" value="save-continue" onclick="GetTextBoxValueOne(false)" class="btn btn-secondary">
                <span>@T("Admin.Common.SaveContinue")</span>
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-4">
        @Html.TextBox("TableName", tableName, new { @readonly = "readonly" })
    </div>
</div>
<p></p>
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <div id="divDetailDataGrid" class="t-widget t-grid">
            <table id="tblData" cellspacing="0">
                @*<thead class="t-grid-header">
                        <tr>
                            @foreach (var column in Model.lstColumn)
                            {
                                <th class="t-header scope="col">

                                    <span class="t-link">@column.ColumnName</span>
                                </th>
                            }
                            <th class="t-header scope="col">

                                <span class="t-link"></span>
                            </th>
                        </tr>
                    </thead>
                    <tbody>*@
                @foreach (var itm in Model.lstRow)
                {
                    var arr = (object[])itm.Value;
                    for (int i = 0; i < arr.Length; i++)
                    {
                        var columnName = Model.lstColumn[i].ColumnName;
                        bool columnAllowNulls = Model.lstColumn[i].AllowNull == null ? false : (bool)Model.lstColumn[i].AllowNull;
                        var dataType = Model.lstColumn[i].DataType;
                        string[] colType = dataType.Split('.');

                        if (i == 0)
                        {
                            <tr>
                                <th style="float:right">
                                    Field - Type
                                </th>
                                <th>
                                    Field
                                </th>
                                <th>
                                    Null
                                </th>
                            </tr>
                        }

                        <tr>

                            <td style="width:25%;text-align:right;">
                                @columnName - @colType[1]
                            </td>
                            @if (i == 0)
                            {
                                Id = arr[i].ToString();
                                <td>
                                    @Id
                                </td>
                                <td></td>
                            }
                            else
                            {
                                if (dataType.Contains("Date"))
                                {

                                    if (columnAllowNulls)
                                    {
                                        if (System.DBNull.Value == arr[i])
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @class = "datepicker_recurring_start", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, true, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @class = "datepicker_recurring_start" })
                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, false, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }

                                    }
                                    else
                                    {
                                        <td>
                                            @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @class = "datepicker_recurring_start" })

                                        </td>
                                        <td></td>
                                    }

                                }
                                else if (dataType.Contains("Int"))
                                {
                                    if (columnAllowNulls)
                                    {

                                        if (System.DBNull.Value == arr[i])
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @type = "number", @readonly = "readonly" })

                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, true, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @type = "number" })
                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, false, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @type = "number" })

                                        </td>
                                        <td></td>
                                    }

                                }
                                else if (dataType.Contains("Boolean"))
                                {
                                    var attrName = columnName + "=" + dataType;
                                    string boolvalue = arr[i].ToString() == "True" ? "1" : "0";
                                    <td>
                                        @Html.TextBoxFor(m => @arr[i], new { @Value = boolvalue, @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @placeholder = "Enter 0 or 1", @maxlength = "1", onkeypress = "return booleanValidation(event)" })
                                    </td>
                                    <td></td>
                                }
                                else
                                {
                                    if (columnAllowNulls)
                                    {

                                        if (System.DBNull.Value == arr[i])
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType), @readonly = "readonly" })

                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, true, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType) })

                                            </td>
                                            <td>
                                                @Html.CheckBox(columnName, false, new { @id = String.Format("chk_{0}", columnName), @data_columnName = "" + columnName + "", @class = "chkbx_null" })
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.TextBoxFor(m => @arr[i], new { @id = String.Format("val_{0}", columnName), @Name = (columnName + "=" + dataType) })
                                        </td>
                                        <td></td>
                                    }


                                }

                            }



                        </tr>

                    }

                }
                @*</tbody>*@

            </table>
        </div>
    </div>
</div>

<script>
	function booleanValidation(evt) {

	var charCode = (evt.which) ? evt.which : event.keyCode;
     if ((charCode == 48 || charCode == 49)){
		 return true;
	 }
      else
	 {
          return false;
          }
}
        var model = [{ Value: '' }];

	$('body').on('focus', ".datepicker_recurring_start", function () {
		$(this).datepicker();
});

	function GetTextBoxValueOne(redirect) {
		$("#tblData tr td").children(":input").each(function () {

			var colName = $(this).attr('name').split('=')[0];
			var isTableElem = $(this).hasClass("chkbx_null");
			var elemType = $(this).attr("type");
            //only
			if (!isTableElem && elemType != "hidden") {
				if ($("#chk_" + colName).length > 0) {
					if ($("#chk_" + colName).is(":checked")) {
						model.push($(this).val() + "=" + $(this).attr('name') + "=" + "1");
					}
					else {
						model.push($(this).val() + "=" + $(this).attr('name') + "=" + "0");
					}
				}
				else {
					model.push($(this).val() + "=" + $(this).attr('name'));
				}
			}
        });

        model.push('@Id');
        model.push('@tableName');


         $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Content("/DBManager/UpdateRow")",
             data: JSON.stringify(model ),
            dataType: "json",
			 success: function (data) {
				 if (redirect) {
				        window.location.href = '@Url.Action("DataDetail", "DBManager", new { @tableName = @tableName})';
				 }
            },

            error: function (data) {
                alert('error occured');
            }
        });
    }


    $(document).on('change', '.chkbx_null', function () {

        var chkId = $(this).attr('id');
		var colName = $(this).attr('data-columnName');
		var isChecked = $("#" + chkId).is(":checked");
		if (isChecked) {
            $("#val_" + colName).attr("readonly", "readonly");
            $("#val_" + colName).val('');
		}
		else {
            $("#val_" + colName).removeAttr("readonly");
            $("#val_" + colName).val('');
		}


    });


</script>
