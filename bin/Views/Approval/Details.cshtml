@model SmartStore.Core.Domain.Approvals.ApprovalUsageHistory
@using SmartStore.Web.Models.Checkout;
@using System.Reflection;
@{
    Layout = "_Layout";
    //Html.AddTitleParts("Order Details waiting for Approval");
    Html.AddBodyCssClass("checkout-page");
    Html.AddBodyCssClass("order-summary-page no-offcanvas-cart");

    var ApprovalStatus = Model.Status.GetType()?
                                        .GetMember(Model.Status.ToString())?
                                        .First()?
                                        .GetCustomAttribute<System.ComponentModel.DataAnnotations.DisplayAttribute>()?
                                        .Name;
}

<div class="page checkout-confirm-page">
    <div class="page-title">
        <div class="title">
            <span class="h2 mb-0">Order Details waiting for Approval</span>
            <a href="@Url.Action("List", "Approval")">(Back to approval list)</a>
        </div>

        @*<a href="@Url.Action("Review", "Approval", new { orderId = Model.OrderId })" class="btn btn-primary">Reivew & Edit</a>*@

    </div>
    <div class="page-body checkout-data">

        <div class="row mb-3">
            <div class="col-6 col-sm-auto pb-3">
                <h5 class="text-muted">Order #</h5>
                <div>@Model.OrderId</div>
            </div>
            <div class="col-6 col-sm-auto pb-3">
                <h5 class="text-muted">Created On</h5>
                <div>@Model.CreatedOn.ToShortDateString()</div>
            </div>
            <div class="col-6 col-sm-auto pb-3">
                <h5 class="text-muted">Approval ID</h5>
                <div>@Model.ApprovalId</div>
            </div>

            <div class="col-6 col-sm-auto pb-3">
                <h5 class="text-muted">Order Status</h5>
                <div>@ApprovalStatus</div>
            </div>
            <div class="col-6 col-sm-auto pb-3">
                <h5 class="text-muted">Name</h5>
                <div>@Model.Approval.Name</div>
            </div>
        </div>

        <div class="order-summary-body mb-4">
            @{ Html.RenderAction("OrderSummary", "Approval", new { auhId = Model.Id }); }
        </div>
        @*<input type="hidden" name="approvalId" value="@Model.ApprovalId" />
        <input type="hidden" id="approvalAction" name="approvalAction" />*@

        @*<input type="hidden" id="isApprovalEdited" name="isApprovalEdited" value="@Model.IsEdited" />*@

        <div class="cart-buttons my-4 row">
            <div class="col-sm-6 col-lg-4 order-last order-sm-first mt-3 mt-sm-0">
                <button class="btn btn-secondary btn-lg btn-block btn-approval" id="btnReject" data-action="Reject">
                    <i class="fa fa-angle-left mr-3"></i>
                    <span>Reject</span>
                </button>
            </div>

            <div class="col-sm-6 col-lg-4 ml-lg-auto">
                <button class="btn btn-danger btn-lg btn-block btn-buy btn-approval" id="btnApprove" data-action="Approve">
                    <span>Approve</span>
                    <i class="fa fa-angle-right ml-3"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    var requireCommentOnEditRejection = false;
    var requireCommentOnEditApprove = false;
    @*//@Json.Encode(Model.ApprovalPluginSettings.RequireCommentOnEditRejection);
    //@Json.Encode(Model.ApprovalPluginSettings.RequireCommentOnEditApprove);*@

    function isRequiredCommentsOk(action) {
        var approvalComments = $.trim($('#ApprovalComments').val());
        /*var isApprovalEdited = $('#isApprovalEdited').val();

        return !requireCommentOnEditRejection
            || (requireCommentOnEditRejection && action == 'Reject' && approvalComments.length > 0)
            || (requireCommentOnEditRejection && action == 'Approve' && (!isApprovalEdited || (isApprovalEdited && approvalComments.length > 0)));*/



        return ((action == 'Reject' && !requireCommentOnEditRejection) || (requireCommentOnEditRejection && action == 'Reject' && approvalComments.length > 0)) ||
               ((action == 'Approve' && !requireCommentOnEditApprove) || (requireCommentOnEditApprove && action == 'Approve' && approvalComments.length > 0))
    }




    $(document).ready(function () {
        $('#approval-form').submit(function () {
            $('.btn-approval', this).attr('disabled', 'disabled');
        });

        var approvalButtons = $('.btn-approval');
        approvalButtons.on('click', function () {

            var actionUrl = "";
            var action =$(this).data('action');
            if (isRequiredCommentsOk(action)) {
                approvalButtons.attr('disabled', 'disabled');

                $(this).find('.fa-ban')
                    .removeClass('fa-ban')
                    .addClass('fa-spinner fa-spin');

                $(this).find('.fa-check-square-o')
                    .removeClass('fa-check-square-o')
                    .addClass('fa-spinner fa-spin');

            if (action == "Approve") {
                actionUrl = '@Url.Action("Approve","Approval", new { auhId = Model.Id, storeId = Model.StoreId, approverComments= "comments1" })'.replace('comments1', $('#ApprovalComments').val()).replace('amp;', '').replace('amp;', '');
            }
            else {
                actionUrl = '@Url.Action("Reject","Approval", new { auhId = Model.Id, storeId = Model.StoreId, approverComments= "comments1" })'.replace('comments1', $('#ApprovalComments').val()).replace('amp;', '').replace('amp;', '');
            }

            $.ajax(actionUrl, {
                method: 'GET',
                success: function (res) {
                    if (res == "success") {
                        window.location.href = "/Approval/List";
                    }
                    else {
                        window.location.reload();
                    }
                }
            });

            } else {
                displayNotification('Please enter comments', 'error');
                var approvalCommentsTextbox = $('#ApprovalComments');
                approvalCommentsTextbox.focus();
                $.scrollTo(approvalCommentsTextbox, 800, { offset: -60 });
            }

        });
    });
</script>

