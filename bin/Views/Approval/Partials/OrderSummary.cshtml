@model ShoppingCartModel
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Web.Models.ShoppingCart;
@{
    var approvalPluginSettings = (SmartStore.Admin.Models.Approvals.ApprovalPluginSettings)ViewData["approvalPluginSettings"];
}

<div class="order-summary-content cart-content">
    @{ Html.RenderPartial("_OrderReviewData", Model.OrderReviewData); }

    <div class="card">
        <div id="cart-items" class="cart mb-0@((approvalPluginSettings != null && approvalPluginSettings.AllowLineItemQuantityEdit) ? " cart-editable" : "")">
            <div class="cart-head">
                <div class="cart-row">
                    <div class="cart-col cart-col-main">
                        @T("ShoppingCart.Product(s)")
                    </div>
                    <div class="cart-col cart-col-price">
                        @T("ShoppingCart.UnitPrice")
                    </div>
                    <div class="cart-col cart-col-qty">
                        @T("ShoppingCart.Quantity")
                    </div>
                    <div class="cart-col cart-col-price cart-col-subtotal">
                        @T("ShoppingCart.ItemTotal")
                    </div>
                </div>
            </div>
            <div class="cart-body">
                @{ Html.RenderPartial("CartItems", Model); }
            </div>
        </div>

        <div class="cart-footer rounded-bottom">
            <div class="row">
                <div class="col-md-6">
                    @if (Model.IsEditable)
                    {
                        //Html.RenderWidget("order_summary_actions_before");
                        Html.RenderPartial("_DiscountBox", Model.DiscountBox);
                        Html.RenderPartial("_GiftCardBox", Model.GiftCardBox);
                        Html.RenderPartial("_RewardPointsBox", Model.RewardPoints);
                        Html.RenderPartial("EstimateShipping", Model.EstimateShipping);

                        //Html.RenderWidget("order_summary_actions_after");
                    }
                    else
                    {
                        if (Model.CheckoutAttributeInfo.HasValue())
                        {
                            <div class="selected-checkout-attributes">
                                @Html.Raw(Model.CheckoutAttributeInfo)
                            </div>
                        }
                    }
                </div>
                <div class="col-md-6">
                    @{
                        if (Model.IsEditable)
                        {
                            Html.RenderPartial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary());
                        }
                        //Html.RenderWidget("order_summary_totals_before");

                        <div id="order-totals">
                            @if (approvalPluginSettings != null)
                            {
                                Html.RenderAction("OrderTotals", "Approval", new { isEditable = Model.IsEditable, auhId = ViewData["approvalId"] });
                            }
                            else
                            {
                                Html.RenderAction("OrderTotals", "Approval", new { isEditable = false, auhId = ViewData["approvalId"], isCustomerOrderDetailsView = true });
                            }
                        </div>

                        //Html.RenderWidget("order_summary_totals_after");
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if ((approvalPluginSettings != null) && (approvalPluginSettings.AllowLineItemDelete || approvalPluginSettings.AllowLineItemQuantityEdit))
{
    Html.RenderPartial("_RefreshCartScript");
}

<br />
@{ Html.RenderPartial("_CommentBox", Model); }