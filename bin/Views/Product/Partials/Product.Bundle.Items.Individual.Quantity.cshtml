@model IList<ProductDetailsModel>

@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web;

<div class="pd-bundle-items">
    @foreach (var item in Model)
    {
        string updateUrl = string.Empty;

        if (!item.BundleItem.VisitProductDetail)
        {
            updateUrl= Url.Action("UpdateProductDetails", "Product", new
            {
                productId = item.Id,
                bundleItemId = item.BundleItem.Id,
                itemType = "bundleitem"
            });
        }



        var gallery = item.MediaGalleryModel;
        var img = gallery.Files?.FirstOrDefault();

        <div class="pd-bundle-item card-body update-container" data-url="@updateUrl">
            <div class="pd-bundle-item-top row no-gutters">
                @if (img != null && !item.BundleItem.HideThumbnail)
                {
                    <div class="pd-bundle-item-image col" style="min-width: @(item.ThumbDimensions)px; max-width: @(item.ThumbDimensions)px;">
                        <img class="img-fluid pd-dyn-thumb" src="@img.GetUrl(gallery.ThumbSize)" alt="@(img?.Alt)" title="@(img?.TitleAttribute)" />
                    </div>
                }
                <div class="pd-bundle-item-body col pl-3">
                    <div class="pd-bundle-item-name">
                        @if (item.BundleItem.VisitProductDetail)
                        {
                            if (item.BundleItem.Quantity > 1)
                            {
                                <span>@(item.BundleItem.Quantity)&nbsp;&#215;</span>
                            }
                        }
                        @if (item.VisibleIndividually)
                        {
                            <a href="@Url.RouteUrl("Product", new { SeName = item.SeName })" title="@T("Products.Details")">@item.Name</a>
                        }
                        else
                        {
                            <span>@item.Name</span>
                        }
                    </div>

                    @if (item.ShortDescription.HasValue())
                    {
                        var shortDescription = item.ShortDescription.Value.Truncate(120, "...");
                        <div class="pd-bundle-item-description" @Html.LanguageAttributes(item.ShortDescription) @Html.Attr("title", item.ShortDescription, item.ShortDescription != shortDescription)>
                            @Html.Raw(shortDescription)
                        </div>
                    }

                    <div class="pd-bundle-item-offer pt-12">
                        <div class="pd-bundle-item-attribute-info">
                            @Html.Raw(item.AttributeInfo)
                        </div>
                        <div class="pd-offer-price-container" data-partial="BundleItemPrice">
                            @{ Html.RenderPartial("Product.Offer.Price", item); }
                        </div>
                        <div class="pd-stock-info-container" data-partial="BundleItemStock">
                            @{ Html.RenderPartial("Product.StockInfo", item); }
                        </div>
                    </div>

                </div>

            </div>

            @if (item.ProductVariantAttributes.ShouldBeRendered())
            {
                <div class="pd-bundle-item-variants@(item.BundleItem.IsBundleItemPricing ? "" : " d-none") pt-3" data-partial="BundleItemVariants">
                    @{ Html.RenderPartial("Product.Variants", item.ProductVariantAttributes, new ViewDataDictionary()); }
                </div>
            }
            @if (!item.AddToCart.HideQuantityControl)
            {
                if (item.BundleItem.VisitProductDetail)
                {
                    <div class="col-sm-4 pd-offer-action-qty">
                        <label class="mr-2"><input type="checkbox" id="chkInclude-@item.Id" class="chkIncludeProduct" data-productid="@item.Id" /> Include </label>
                        <input type="hidden" id="addtocart_include_product-@item.Id" name="addtocart_include_product-@item.Id" value="false" />
                    </div>

                    <script>
                        $(document).on("click", ".chkIncludeProduct", function (e) {
                            debugger
                            var productId = $(this).attr("data-productid");

                            if ($(this).is(":checked")) {
                                $("#addtocart_include_product-" + productId).val("true");


                            }
                            else {
                                $("#addtocart_include_product-" + productId).val("false");
                            }

                        });


                    </script>
                }
                else
                {
                    <div class="col-sm-4 pd-offer-action-qty">
                        @{
                            string _id = "addtocart_" + item.Id + "_AddToCart_EnteredQuantity";
                            string _name = "addtocart_" + item.Id + ".AddToCart.EnteredQuantity";
                            @Html.EditorFor(model => item.AddToCart, "QtyInput", new { htmlAttributes = new { Name = _name, @id = _id, @Value = item.BundleItem.Quantity } })
                        }

                    </div>
                }
            }
            @if (item.GiftCard.IsGiftCard)
            {
                var dataDictBundleItemGiftCard = new ViewDataDictionary();
                dataDictBundleItemGiftCard.TemplateInfo.HtmlFieldPrefix = item.GiftCardFieldPrefix;
                <div class="pd-bundle-item-giftcard pt-3">
                    @Html.Partial("Product.GiftCard", item.GiftCard, dataDictBundleItemGiftCard)
                </div>
            }
        </div>
    }
</div>
